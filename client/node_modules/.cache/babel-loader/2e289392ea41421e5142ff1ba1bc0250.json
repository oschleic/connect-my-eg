{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Schle\\\\personal\\\\evergreen\\\\V2\\\\client\\\\src\\\\Middleware\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { checkIsAuthenticated, authSignUp, authLogin, authLogout } from '../Services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({});\nexport default function Auth({\n  children\n}) {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = () => checkIsAuthenticated().then(() => setIsAuthenticated(true)).catch(() => setIsAuthenticated(false)).then(() => setIsLoading(false));\n\n  const login = credentials => authLogin(credentials).then(setIsAuthenticated(true)).catch(error => {\n    alert(error);\n    setIsAuthenticated(false);\n  });\n\n  const logout = () => {\n    authLogout();\n    setIsAuthenticated(false);\n  };\n\n  const signUp = credentials => authSignUp(credentials).then(setIsAuthenticated(true)).catch(error => {\n    alert(error);\n    setIsAuthenticated(false);\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      isLoading,\n      login,\n      logout,\n      signUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Auth, \"QGOAXroSjAVQAlauW9LqDUcn+wM=\");\n\n_c = Auth;\nAuth.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.array])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Schle/personal/evergreen/V2/client/src/Middleware/auth.js"],"names":["React","useState","useEffect","PropTypes","checkIsAuthenticated","authSignUp","authLogin","authLogout","AuthContext","createContext","Auth","children","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuth","then","catch","login","credentials","error","alert","logout","signUp","propTypes","oneOfType","func","array"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,UAAtD,QAAwE,kBAAxE;;AAEA,OAAO,MAAMC,WAAW,gBAAGR,KAAK,CAACS,aAAN,CAAoB,EAApB,CAApB;AAEP,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AAAA;;AAEvC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,MAAMZ,oBAAoB,GACvCa,IADmB,CACd,MAAMJ,kBAAkB,CAAC,IAAD,CADV,EAEnBK,KAFmB,CAEb,MAAML,kBAAkB,CAAC,KAAD,CAFX,EAGnBI,IAHmB,CAGd,MAAMF,YAAY,CAAC,KAAD,CAHJ,CAAxB;;AAKA,QAAMI,KAAK,GAAGC,WAAW,IAAId,SAAS,CAACc,WAAD,CAAT,CACxBH,IADwB,CACnBJ,kBAAkB,CAAC,IAAD,CADC,EAExBK,KAFwB,CAElBG,KAAK,IAAI;AACZC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACAR,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GALwB,CAA7B;;AAOA,QAAMU,MAAM,GAAG,MAAM;AACjBhB,IAAAA,UAAU;AACVM,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAHD;;AAKA,QAAMW,MAAM,GAAGJ,WAAW,IAAIf,UAAU,CAACe,WAAD,CAAV,CACzBH,IADyB,CACpBJ,kBAAkB,CAAC,IAAD,CADE,EAEzBK,KAFyB,CAEnBG,KAAK,IAAI;AACZC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACAR,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GALyB,CAA9B;;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,eAAF;AAAmBE,MAAAA,SAAnB;AAA8BK,MAAAA,KAA9B;AAAqCI,MAAAA,MAArC;AAA6CC,MAAAA;AAA7C,KAA7B;AAAA,cACKb;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtCuBD,I;;KAAAA,I;AAwCxBA,IAAI,CAACe,SAAL,GAAiB;AACbd,EAAAA,QAAQ,EAAER,SAAS,CAACuB,SAAV,CAAoB,CAC1BvB,SAAS,CAACwB,IADgB,EAE1BxB,SAAS,CAACyB,KAFgB,CAApB;AADG,CAAjB","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { checkIsAuthenticated, authSignUp, authLogin, authLogout } from '../Services/auth'\r\n\r\nexport const AuthContext = React.createContext({})\r\n\r\nexport default function Auth({ children }) {\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        checkAuth()\r\n    }, [])\r\n\r\n    const checkAuth = () => checkIsAuthenticated()\r\n        .then(() => setIsAuthenticated(true))\r\n        .catch(() => setIsAuthenticated(false))\r\n        .then(() => setIsLoading(false))\r\n\r\n    const login = credentials => authLogin(credentials)\r\n        .then(setIsAuthenticated(true))\r\n        .catch(error => {\r\n            alert(error)\r\n            setIsAuthenticated(false)\r\n        })\r\n\r\n    const logout = () => {\r\n        authLogout()\r\n        setIsAuthenticated(false)\r\n    }\r\n\r\n    const signUp = credentials => authSignUp(credentials)\r\n        .then(setIsAuthenticated(true))\r\n        .catch(error => {\r\n            alert(error)\r\n            setIsAuthenticated(false)\r\n        })\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, isLoading, login, logout, signUp }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nAuth.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.array\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}